public abstract class Conta implements IConta {
    private static int SEQUENCIAL = 1;

    protected int agencia;
    protected int numero;
    protected double saldo;
    protected Cliente cliente;
    protected Agencia agenciaInfo;

    public Conta(Cliente cliente, Agencia agencia) {
        this.agenciaInfo = agencia;
        this.agencia = agencia.getNumero();
        this.numero = SEQUENCIAL++;
        this.cliente = cliente;
    }

    @Override
    public void depositar(double valor) {
        saldo += valor;
        registrarTransacao(valor, "Depósito");
    }

    @Override
    public void sacar(double valor) {
        saldo -= valor;
        registrarTransacao(-valor, "Saque");
    }

    @Override
    public void transferir(double valor, Conta contaDestino) {
        this.sacar(valor);
        contaDestino.depositar(valor);
        registrarTransacao(-valor, "Transferência enviada");
        contaDestino.registrarTransacao(valor, "Transferência recebida");
    }

    private void registrarTransacao(double valor, String descricao) {
        Transacao transacao = new Transacao(valor, descricao);
        // Adicione a transação à lista de transações da conta (não implementado aqui)
    }

    protected void imprimirInfsComuns() {
        System.out.println(String.format("Titular: %s", this.cliente.getNome()));
        System.out.println(String.format("Agência: %d", this.agencia));
        System.out.println(String.format("Número: %d", this.numero));
        System.out.println(String.format("Saldo: %.2f", this.saldo));
    }
}
